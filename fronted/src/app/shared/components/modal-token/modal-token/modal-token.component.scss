$d: 15em;
$t: 300;
$c: #00c853 #d50000;

@property --t {
  syntax: '<number>';
  initial-value: #{$t};
  inherits: true;
}

/* won't be needed once Chrome supports round() */
@property --s {
  syntax: '<integer>';
  initial-value: 0;
  inherits: true;
}

.countdown {
  /* when Chrome supports round(), this can be simplified */
  /* more on this rounding trick
	 * https://css-tricks.com/using-absolute-value-sign-rounding-and-modulo-in-css-today/ */
  --s: calc(var(--t) / 1);
  display: grid;
  margin: 1em auto;
  width: $d;
  height: $d;
  animation: t $t * 1s linear infinite;

  &::after {
    grid-column: 1;
    grid-row: 1;
    place-self: center;
    font:
      #{0.25 * $d}/ 2 ubuntu mono,
      consolas,
      monaco,
      monospace;
    counter-reset: s var(--s);
    content: counter(s, decimal-leading-zero) 's';
  }
}

@keyframes t {
  to {
    --t: 0;
  }
}

svg {
  grid-column: 1;
  grid-row: 1;
}

[r] {
  fill: none;
  stroke: silver;

  + [r] {
    --k: calc(var(--t) /#{$t});
    transform: rotate(-90deg);
    stroke-linecap: round;
    stroke: color-mix(
      in hsl shorter hue,
      #{nth($c, 1)} calc(var(--k) * 100%),
      #{nth($c, 2)}
    );
    stroke-dasharray: var(--k) 1;
  }
}
